@isTest
public class ProductProcessBatchTest {
    
    @testSetup static void testSetUpMethod() {
      List<SQX_Part__c> partsList=new List<SQX_Part__c>();
        SQX_Part__c part1=new SQX_Part__c();
        part1.Name='Part 1';
        part1.Part_Number__c='12345';
        partsList.add(part1);
        
        SQX_Part__c part2=new SQX_Part__c();
        part2.Name='Part 2';
        part2.Part_Number__c='12345D';
        partsList.add(part2);
        insert partsList;
        
    }
    
    @isTest
    static void ProductProcessBatchWithoutProductTest() {
        Test.startTest();
            ProductProcessBatch obj = new ProductProcessBatch('');
            DataBase.executeBatch(obj);   
        Test.stopTest();
        
         List<SQX_Part__c> partsResultList=[select Id,Name,Part_Number__c,Active__c,Product__c from SQX_Part__c];
         SQX_Part__c partResul0=partsResultList.get(0);
         Assert.isNotNull(partResul0);
         Assert.isNotNull(partResul0.Product__c);
    }
    
    
     @isTest
    static void ProductProcessBatchWithProductTest() {
        
        Product2 product2Obj=new Product2();
        product2Obj.Name='Part 1';
        product2Obj.ProductCode='12345';
        
        insert product2Obj;
        
        Test.startTest();
            ProductProcessBatch obj = new ProductProcessBatch('');
            DataBase.executeBatch(obj);   
        Test.stopTest();
        
         List<SQX_Part__c> partsResultList=[select Id,Name,Part_Number__c,Active__c,Product__c from SQX_Part__c];
         SQX_Part__c partResul0=partsResultList.get(0);
         Assert.isNotNull(partResul0);
         Assert.isNotNull(partResul0.Product__c);
    }
   
    
    
    
    
}
